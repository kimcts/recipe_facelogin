[{"C:\\faceloginproject\\flask-frontend_style\\src\\index.js":"1","C:\\faceloginproject\\flask-frontend_style\\src\\reportWebVitals.js":"2","C:\\faceloginproject\\flask-frontend_style\\src\\App.js":"3","C:\\faceloginproject\\flask-frontend_style\\src\\components\\FaceRegister.js":"4","C:\\faceloginproject\\flask-frontend_style\\src\\components\\FaceLogin.js":"5"},{"size":298,"mtime":1654828514590,"results":"6","hashOfConfig":"7"},{"size":362,"mtime":1651568849000,"results":"8","hashOfConfig":"7"},{"size":1436,"mtime":1654852141672,"results":"9","hashOfConfig":"7"},{"size":2488,"mtime":1658129581044,"results":"10","hashOfConfig":"7"},{"size":2186,"mtime":1658129610432,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"w8n40z",{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"C:\\faceloginproject\\flask-frontend_style\\src\\index.js",[],["25","26"],"C:\\faceloginproject\\flask-frontend_style\\src\\reportWebVitals.js",[],"C:\\faceloginproject\\flask-frontend_style\\src\\App.js",[],"C:\\faceloginproject\\flask-frontend_style\\src\\components\\FaceRegister.js",["27"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Webcam from \"react-webcam\";\r\n\r\n// register member's face for face login\r\nconst FaceRegister = () => {\r\n    const [process, setProcess] = useState(\"\");\r\n    const countRef = useRef(0);\r\n    const webcamRef = useRef(0);\r\n    const videoConstraints = {\r\n        width: 200,\r\n        height: 200,\r\n        facingMode: \"user\",\r\n    };\r\n\r\n    const checkFace = () => {\r\n        setTimeout(() => {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (imageSrc) {\r\n                axios\r\n                    .post(\"http://127.0.0.1:5000/register\", {\r\n                        data: imageSrc,\r\n                    })\r\n                    .then((resp) => {\r\n                        console.log(\"check: \" + resp.data);\r\n                        setProcess(\"확인 중입니다\");\r\n                        if (resp.data === \"checked\")\r\n                            window.location.replace(\r\n                                \"http://127.0.0.1:8080/react/register\"\r\n                            );\r\n                        else checkFace();\r\n                    });\r\n            } else checkFace();\r\n        }, 100);\r\n    };\r\n\r\n    const newFace = () => {\r\n        setTimeout(() => {\r\n            countRef.current++;\r\n            console.log(countRef.current);\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (imageSrc) {\r\n                axios\r\n                    .post(\"http://127.0.0.1:5000/register\", {\r\n                        data: imageSrc,\r\n                        key: countRef.current,\r\n                    })\r\n                    .then((resp) => {\r\n                        console.log(\"register data: \" + resp.data);\r\n                        setProcess(\"등록 중입니다\");\r\n                        if (resp.data === \"fail\") newFace();\r\n                        else checkFace();\r\n                    });\r\n            } else newFace();\r\n        }, 100);\r\n    };\r\n    useEffect(() => {\r\n        newFace();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Webcam\r\n                mirrored={true}\r\n                audio={false}\r\n                height={300}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={350}\r\n                videoConstraints={videoConstraints}\r\n            />\r\n            <h2>{process}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FaceRegister;\r\n","C:\\faceloginproject\\flask-frontend_style\\src\\components\\FaceLogin.js",["28"],"import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport Webcam from 'react-webcam';\n\n// registered member's face login\nconst FaceLogin = () => {\n  const [name, setName] = useState('');\n  const countRef = useRef(0);\n  const webcamRef = useRef(0);\n  const videoConstraints = {\n    width: 200,\n    height: 200,\n    facingMode: 'user',\n  };\n\n  const recogFace = () => {\n    setTimeout(() => {\n      countRef.current++;\n      console.log(countRef.current);\n      const imageSrc = webcamRef.current.getScreenshot();\n      if (imageSrc) {\n        axios\n          .post('http://127.0.0.1:5000/api', {\n            data: imageSrc,\n            key: countRef.current,\n          })\n          .then((resp) => {\n            console.log(`api resp: ${resp.data}`);\n            if (resp.data === 'unknown') {\n              setName('인식 중입니다');\n              recogFace();\n            } else {\n              console.log(`Found face: ${resp.data}`);\n              setName(resp.data);\n              axios\n                .post('http://127.0.0.1:5000/getData', {\n                  data: resp.data,\n                })\n                .then((resp) => {\n                  console.log('getData resp: ', resp.data);\n                  axios\n                    .post('http://127.0.0.1:8080/react/resp', resp.data)\n                    .then((resp) => {\n                      console.log('react resp: ', resp.data);\n                      //window.location.replace('http://127.0.0.1:8080/react/resp');\n                    })\n                    .catch((error) => {\n                      console.log(error);\n                    });\n                })\n                .catch((error) => {\n                  console.log(error);\n                });\n            }\n          });\n      } else recogFace();\n    }, 100);\n  };\n  useEffect(() => {\n    recogFace();\n  }, []);\n\n  return (\n    <div>\n      <Webcam\n        mirrored={true}\n        audio={false}\n        height={300}\n        ref={webcamRef}\n        screenshotFormat=\"image/jpeg\"\n        width={350}\n        videoConstraints={videoConstraints}\n      />\n      <h2>{name}</h2>\n    </div>\n  );\n};\n\nexport default FaceLogin;\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","severity":1,"message":"34","line":59,"column":8,"nodeType":"35","endLine":59,"endColumn":10,"suggestions":"36"},{"ruleId":"33","severity":1,"message":"37","line":61,"column":6,"nodeType":"35","endLine":61,"endColumn":8,"suggestions":"38"},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'newFace'. Either include it or remove the dependency array.","ArrayExpression",["41"],"React Hook useEffect has a missing dependency: 'recogFace'. Either include it or remove the dependency array.",["42"],"no-global-assign","no-unsafe-negation",{"desc":"43","fix":"44"},{"desc":"45","fix":"46"},"Update the dependencies array to be: [newFace]",{"range":"47","text":"48"},"Update the dependencies array to be: [recogFace]",{"range":"49","text":"50"},[2042,2044],"[newFace]",[1863,1865],"[recogFace]"]