{"ast":null,"code":"var _jsxFileName = \"C:\\\\faceloginproject\\\\flask-frontend_style\\\\src\\\\components\\\\FaceRegister.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport Webcam from \"react-webcam\"; // register member's face for face login\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FaceRegister = () => {\n  _s();\n\n  const [process, setProcess] = useState(\"\");\n  const countRef = useRef(0);\n  const webcamRef = useRef(0);\n  const videoConstraints = {\n    width: 200,\n    height: 200,\n    facingMode: \"user\"\n  };\n\n  const checkFace = () => {\n    setTimeout(() => {\n      const imageSrc = webcamRef.current.getScreenshot();\n\n      if (imageSrc) {\n        axios.post(\"http://127.0.0.1:5000/register\", {\n          data: imageSrc\n        }).then(resp => {\n          console.log(\"check: \" + resp.data);\n          setProcess(\"확인 중입니다\");\n\n          if (resp.data === \"checked\") {\n            console.log(\"완료\");\n          } // window.location.replace(\n          //     \"http://127.0.0.1:8080/react/register\"\n          // );\n          else checkFace();\n        });\n      } else checkFace();\n    }, 100);\n  };\n\n  const newFace = () => {\n    setTimeout(() => {\n      countRef.current++;\n      console.log(countRef.current);\n      const imageSrc = webcamRef.current.getScreenshot();\n\n      if (imageSrc) {\n        axios.post(\"http://127.0.0.1:5000/register\", {\n          data: imageSrc,\n          key: countRef.current\n        }).then(resp => {\n          console.log(\"register data: \" + resp.data);\n          setProcess(\"등록 중입니다\");\n          if (resp.data === \"fail\") newFace();else checkFace();\n        });\n      } else newFace();\n    }, 100);\n  };\n\n  useEffect(() => {\n    newFace();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Webcam, {\n      mirrored: true,\n      audio: false,\n      height: 300,\n      ref: webcamRef,\n      screenshotFormat: \"image/jpeg\",\n      width: 350,\n      videoConstraints: videoConstraints\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: process\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\n_s(FaceRegister, \"9xVGb9POcFS9690PkQUvTvL0IzI=\");\n\n_c = FaceRegister;\nexport default FaceRegister;\n\nvar _c;\n\n$RefreshReg$(_c, \"FaceRegister\");","map":{"version":3,"sources":["C:/faceloginproject/flask-frontend_style/src/components/FaceRegister.js"],"names":["React","useState","useEffect","useRef","axios","Webcam","FaceRegister","process","setProcess","countRef","webcamRef","videoConstraints","width","height","facingMode","checkFace","setTimeout","imageSrc","current","getScreenshot","post","data","then","resp","console","log","newFace","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;;;;AACA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMQ,QAAQ,GAAGN,MAAM,CAAC,CAAD,CAAvB;AACA,QAAMO,SAAS,GAAGP,MAAM,CAAC,CAAD,CAAxB;AACA,QAAMQ,gBAAgB,GAAG;AACrBC,IAAAA,KAAK,EAAE,GADc;AAErBC,IAAAA,MAAM,EAAE,GAFa;AAGrBC,IAAAA,UAAU,EAAE;AAHS,GAAzB;;AAMA,QAAMC,SAAS,GAAG,MAAM;AACpBC,IAAAA,UAAU,CAAC,MAAM;AACb,YAAMC,QAAQ,GAAGP,SAAS,CAACQ,OAAV,CAAkBC,aAAlB,EAAjB;;AACA,UAAIF,QAAJ,EAAc;AACVb,QAAAA,KAAK,CACAgB,IADL,CACU,gCADV,EAC4C;AACpCC,UAAAA,IAAI,EAAEJ;AAD8B,SAD5C,EAIKK,IAJL,CAIWC,IAAD,IAAU;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,YAAYF,IAAI,CAACF,IAA7B;AACAb,UAAAA,UAAU,CAAC,SAAD,CAAV;;AACA,cAAIe,IAAI,CAACF,IAAL,KAAc,SAAlB,EAA4B;AACxBG,YAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACH,WAFD,CAGI;AACA;AACA;AALJ,eAMKV,SAAS;AACjB,SAdL;AAeH,OAhBD,MAgBOA,SAAS;AACnB,KAnBS,EAmBP,GAnBO,CAAV;AAoBH,GArBD;;AAuBA,QAAMW,OAAO,GAAG,MAAM;AAClBV,IAAAA,UAAU,CAAC,MAAM;AACbP,MAAAA,QAAQ,CAACS,OAAT;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYhB,QAAQ,CAACS,OAArB;AACA,YAAMD,QAAQ,GAAGP,SAAS,CAACQ,OAAV,CAAkBC,aAAlB,EAAjB;;AACA,UAAIF,QAAJ,EAAc;AACVb,QAAAA,KAAK,CACAgB,IADL,CACU,gCADV,EAC4C;AACpCC,UAAAA,IAAI,EAAEJ,QAD8B;AAEpCU,UAAAA,GAAG,EAAElB,QAAQ,CAACS;AAFsB,SAD5C,EAKKI,IALL,CAKWC,IAAD,IAAU;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBF,IAAI,CAACF,IAArC;AACAb,UAAAA,UAAU,CAAC,SAAD,CAAV;AACA,cAAIe,IAAI,CAACF,IAAL,KAAc,MAAlB,EAA0BK,OAAO,GAAjC,KACKX,SAAS;AACjB,SAVL;AAWH,OAZD,MAYOW,OAAO;AACjB,KAjBS,EAiBP,GAjBO,CAAV;AAkBH,GAnBD;;AAoBAxB,EAAAA,SAAS,CAAC,MAAM;AACZwB,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AACI,MAAA,QAAQ,EAAE,IADd;AAEI,MAAA,KAAK,EAAE,KAFX;AAGI,MAAA,MAAM,EAAE,GAHZ;AAII,MAAA,GAAG,EAAEhB,SAJT;AAKI,MAAA,gBAAgB,EAAC,YALrB;AAMI,MAAA,KAAK,EAAE,GANX;AAOI,MAAA,gBAAgB,EAAEC;AAPtB;AAAA;AAAA;AAAA;AAAA,YADJ,eAUI;AAAA,gBAAKJ;AAAL;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAvED;;GAAMD,Y;;KAAAA,Y;AAyEN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Webcam from \"react-webcam\";\r\n\r\n// register member's face for face login\r\nconst FaceRegister = () => {\r\n    const [process, setProcess] = useState(\"\");\r\n    const countRef = useRef(0);\r\n    const webcamRef = useRef(0);\r\n    const videoConstraints = {\r\n        width: 200,\r\n        height: 200,\r\n        facingMode: \"user\",\r\n    };\r\n\r\n    const checkFace = () => {\r\n        setTimeout(() => {\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (imageSrc) {\r\n                axios\r\n                    .post(\"http://127.0.0.1:5000/register\", {\r\n                        data: imageSrc,\r\n                    })\r\n                    .then((resp) => {\r\n                        console.log(\"check: \" + resp.data);\r\n                        setProcess(\"확인 중입니다\");\r\n                        if (resp.data === \"checked\"){\r\n                            console.log(\"완료\");\r\n                        }\r\n                            // window.location.replace(\r\n                            //     \"http://127.0.0.1:8080/react/register\"\r\n                            // );\r\n                        else checkFace();\r\n                    });\r\n            } else checkFace();\r\n        }, 100);\r\n    };\r\n\r\n    const newFace = () => {\r\n        setTimeout(() => {\r\n            countRef.current++;\r\n            console.log(countRef.current);\r\n            const imageSrc = webcamRef.current.getScreenshot();\r\n            if (imageSrc) {\r\n                axios\r\n                    .post(\"http://127.0.0.1:5000/register\", {\r\n                        data: imageSrc,\r\n                        key: countRef.current,\r\n                    })\r\n                    .then((resp) => {\r\n                        console.log(\"register data: \" + resp.data);\r\n                        setProcess(\"등록 중입니다\");\r\n                        if (resp.data === \"fail\") newFace();\r\n                        else checkFace();\r\n                    });\r\n            } else newFace();\r\n        }, 100);\r\n    };\r\n    useEffect(() => {\r\n        newFace();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Webcam\r\n                mirrored={true}\r\n                audio={false}\r\n                height={300}\r\n                ref={webcamRef}\r\n                screenshotFormat=\"image/jpeg\"\r\n                width={350}\r\n                videoConstraints={videoConstraints}\r\n            />\r\n            <h2>{process}</h2>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FaceRegister;\r\n"]},"metadata":{},"sourceType":"module"}